{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterNameDesired": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "Name of cluster - should be lowercase, if it is not, a lowercase version will be used."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of resources."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username on machines."
            }            
        },
        "sshKeyData": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The public SSH key data."
            }
        },
        "clusterAdmins": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Comma separated list of users allowed to log into DLWorkspace webportal as administrator and manage the cluster"
            }
        },
        "devSourceIP": {
            "type": "array",
            "defaultValue": ["10.0.0.0/8"],
            "metadata": {
                "description": "Array of IP prefixes of machines which can be used to connect to the nodes."
            }
        },
        "numberOfInfraVM": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of infra-VM to deploy."
            }
        },
        "infraVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Size of the infra-VM. Use a CPU VM for infra-VM." 
            }
        },
        "minWorkerVM": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Minimum number of worker-VM to deploy."
            }
        },
        "maxWorkerVM": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Maximum number of worker-VM to deploy."
            }
        },
        "workerVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Size of the worker-VM. Use a GPU VM for worker-VM."
            }
        },
        "customKubeCRI": {
            "type": "bool",
            "metadata": {
                "description": "Use custom Kubernetes CRI or not."
            },
            "defaultValue": false
        },
        "customKubeScheduler": {
            "type": "bool",
            "metadata": {
                "description": "Use custom Kubernetes Scheduler or not."
            },
            "defaultValue": false
        },
        "kubeLogLevel": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Log level of Kubernetes." 
            }
        },
        "gitLocation": {
            "type": "string",
            "metadata": {
                "description": "The repo and branch where code is located."
            },
            "defaultValue": "sanjeevm0/kcluster/master"
        },
        "gitScript": {
            "type": "string",
            "metadata": {
                "description": "The script to run."
            },
            "defaultValue": "scripts/bootstrap.sh"
        },
        "gitDeployKey": {
            "type": "string",
            "metadata": {
                "description": "The git deploy key."
            },
            "defaultValue": ""
        },
        "azure_cni": {
            "type": "bool",
            "metadata": {
                "description": "Use Azure CNI or not."
            },
            "defaultValue": false
        },
        "accelerated_networking": {
            "type": "bool",
            "metadata": {
                "description": "Use Accelerated Networking on agent nodes - single root I/O virtualization (SR-IOV)"
            },
            "defaultValue": false
        },
        "dual_nic_dpdk": {
            "type": "bool",
            "metadata": {
                "description": "Create two NICs, 2nd one will use SR-IOV, and DPDK installed on VMs"
            },
            "defaultValue": false
        }
    },
    "variables": {
        "clusterName": "[toLower(parameters('clusterNameDesired'))]",
        "standardStorageAccountType": "Standard_LRS",
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "virtualNetworkName": "[concat(resourceGroup().name, '-VNet')]",
        "vmprefix": "10.240.255",
        "podprefix": "10.240",
        "pod_cidr": "10.240.0.0/15",
        "gitDeployKeyB": "[base64(parameters('gitDeployKey'))]",
        "ubuntuOSVersion": "18.04-LTS",
        "numberBootstrap": 1,
        "params": {
            "resource_group": "[resourceGroup().name]",
            "clusterName": "[variables('clusterName')]",
            "location": "[parameters('location')]",
            "adminUsername": "[parameters('adminUsername')]",
            "sshKeyData": "[parameters('sshKeyData')]",
            "clusterAdmins": "[parameters('clusterAdmins')]",
            "devSourceIP": "[parameters('devSourceIP')]",
            "machine_ip_prefix": "[variables('vmprefix')]",
            "pod_ip_prefix": "[variables('podprefix')]",
            "pod_cidr": "[variables('pod_cidr')]",
            "use_azure_cni": "[parameters('azure_cni')]",
            "accelerated_networking": "[parameters('accelerated_networking')]",
            "dual_nic_dpdk": "[parameters('dual_nic_dpdk')]",
            "custom_kube_scheduler": "[parameters('customKubeScheduler')]",
            "custom_kube_cri": "[parameters('customKubeCRI')]",
            "kube_log_level": "[parameters('kubeLogLevel')]",
            "numberOfInfraVM": "[parameters('numberOfInfraVM')]",
            "infraVMSize": "[parameters('infraVMSize')]",
            "minWorkerVM": "[parameters('minWorkerVM')]",
            "maxWorkerVM": "[parameters('maxWorkerVM')]",
            "workerVMSize": "[parameters('workerVMSize')]",
            "numberBootstrap": "[variables('numberBootstrap')]",
            "ubuntuOSVersion": "[variables('ubuntuOSVersion')]",
            "gitlocation": "[parameters('gitLocation')]",
            "gitscript": "[parameters('gitScript')]",
            "gitdeploykeyB": "[variables('gitDeployKeyB')]",
            "_artifactsLocation": "https://raw.githubusercontent.com/sanjeevm0/ARMConfig/master/",
            "_artifactsLocationSasToken": "",
            "standardStorageAccountType": "[variables('standardStorageAccountType')]",
            "imagePublisher": "[variables('imagePublisher')]",
            "imageOffer": "[variables('imageOffer')]",
            "masterNode": true,
            "workerNode": false,
            "bootstrap": true
        },
        "singleQuote": "'",
        "gitdeploykeyQ": "[concat(variables('singleQuote'), variables('gitDeployKeyB'), variables('singleQuote'))]",
        "paramsStr": "[base64(string(variables('params')))]",
        "paramsQ": "[concat(variables('singleQuote'), variables('paramsStr'), variables('singleQuote'))]",
        "ReaderRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "ContributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "OwnerRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": ["10.240.0.0/16"]
                },
                "subnets": [
                    {
                        "name": "VMSubnet",
                        "properties": {
                            "addressPrefix": "10.240.0.0/16"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('clusterName'), '-NSG')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowalltcp",
                        "properties": {
                            "protocol": "Tcp",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRanges": [
                                "80",
                                "6443",
                                "6000",
                                "30000-32767"
                            ]
                        }
                    },
                    {
                        "name": "allowdevtcp",
                        "properties": {
                            "protocol": "Tcp",
                            "access": "Allow",
                            "priority": 900,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": "[parameters('devSourceIP')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "copy": {
                "name": "infraVMPublicIPLoop",
                "count": "[variables('numberBootstrap')]"
            },
            "sku": {
                "name": "Basic"
            },
            "name": "[concat(variables('clusterName'), '-infra-', copyIndex(1), '-PublicIP')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('clusterName'), '-infra-', copyIndex(1)))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "copy": {
                "name": "infraVMNICLoop",
                "count": "[variables('numberBootstrap')]"
            },
            "name": "[concat(variables('clusterName'), '-infra-', copyIndex(1), '-VMNic')]",
            "apiVersion": "2018-02-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'), '-infra-', copyIndex(1), '-PublicIP'))]"
            ],
            "properties": {
                "enableAcceleratedNetworking": false,
                "ipConfigurations": [
                    {
                        "name": "[concat(variables('clusterName'), '-infra-', copyIndex(1), '-IPConfig')]",
                        "properties": {
                            "privateIPAddress": "[concat(variables('vmprefix'), '.', copyIndex(1))]",
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddressVersion": "IPv4",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('clusterName'), '-infra-', copyIndex(1), '-PublicIP'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'VMSubnet')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('clusterName'), '-NSG'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "copy": {
                "name": "infraVMLoop",
                "count": "[variables('numberBootstrap')]"
            },
            "name": "[concat(variables('clusterName'), '-infra-', copyIndex(1))]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'), '-infra-', copyIndex(1), '-VMNic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('infraVMSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "[variables('standardStorageAccountType')]"
                        }
                    }
                },
                "osProfile": {
                    "computerName": "[concat(variables('clusterName'), '-infra-', copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('clusterName'), '-infra-', copyIndex(1), '-VMNic'))]"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2017-09-01",
            "type": "Microsoft.Authorization/roleAssignments",
            "copy": {
                "name": "infraVMRoleLoop",
                "count": "[variables('numberBootstrap')]"
            },
            "name": "[guid(concat(variables('clusterName'), '-infra-', copyIndex(1), '-Role'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('clusterName'), '-infra-', copyIndex(1)))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('OwnerRole')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', concat(variables('clusterName'), '-infra-', copyIndex(1))), '2017-12-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "copy": {
                "name": "infraVMExtensionLoop",
                "count": "[variables('numberBootstrap')]"
            },
            "name": "[concat(variables('clusterName'), '-infra-', copyIndex(1), '/bootstrap')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('clusterName'), '-infra-', copyIndex(1)))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', guid(concat(variables('clusterName'), '-infra-', copyIndex(1), '-Role')))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(variables('params')._artifactsLocation, concat('config.sh', variables('params')._artifactsLocationSasToken))]"
                    ],
                    "timestamp": 9829381811121329
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('bash config.sh ', parameters('adminUsername'), ' ', parameters('gitlocation'), ' ', variables('gitdeploykeyQ'), ' ', parameters('gitscript'), ' Azure ', parameters('adminUsername'), ' ', variables('paramsQ'))]"
                }
            }
        }
    ],
    "outputs": {
        "inframachine" : {
            "type": "string",
            "value": "[reference(concat(variables('clusterName'), '-infra-1', '-PublicIP')).dnsSettings.fqdn]"
        }
    }
}

